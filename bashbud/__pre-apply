#!/usr/bin/env bash

# i3ass specific __pre-apply

# increment version numbers
# set updated to today in manifest.md

smallassupdate() {

  local latest=$1 current=$2
  local latestdir=${latest%/*}
  local ourbbdir="$projectdir/bashbud/__pre-apply.d/"
  local theirbbdir="$latestdir/bashbud/__pre-apply.d/"

  local datescript="$ourbbdir/date-update"
  local versionscript="$ourbbdir/version-increment"

  diff "$latest" "$current" > /dev/null || {
    >&2 echo "update ${current##*/}"

    mkdir -p "$theirbbdir"
    cp -f "$datescript" "$versionscript" -t "$theirbbdir"
    bashbud --bump "$latestdir"
    newversion=$(bashbud --get version "$latestdir")
    rm "$theirbbdir"/date-update "$theirbbdir"/version-increment
    git -C "$latestdir" add .
    git -C "$latestdir" commit -m 'updated version'
    git -C "$latestdir" tag "$newversion"
    git -C "$latestdir" push origin --tags

    cp -f "$latest" "$current"
    cp -f "${latest%/*}/${current##*/}.1" "$projectdir/next/man"
  }
}

projectdir="$1"

# copy all ass man pages
# rename them to the name, add index
i=10
rm -rf "$projectdir/wiki/doc/"*
for f in "$projectdir/ass"/*/manpage.md; do
  thisass="${f%/*}"
  thisass="${thisass##*/}"
  echo "# $(cat "$f")" > \
    "$projectdir/wiki/doc/$((i++))AS_${thisass}.md"
done

# clone next branch if dir doesn't exist
[[ -d "${projectdir}/next" ]] || (
  cd "$projectdir"
  git clone git@github.com:budlabs/i3ass.git \
            --branch next \
            --single-branch next
)

# copy scripts and man pages to next
mkdir -p "$projectdir/next/src"
mkdir -p "$projectdir/next/man"

for f in "$projectdir/ass"/*/program.sh; do
  thisass="${f%/*}"
  thisass="${thisass##*/}"

  smallassupdate "$f" "$projectdir/next/src/$thisass"
done

# update dependency list
{
  for f in "$projectdir/ass"/*; do
    bashbud --get dependencies "$f" 
  done | sort -u 
} > "$projectdir/lib/alldeps"

# update ass list
{
  echo '#!/usr/bin/env bash'
  echo
  echo 'asslist() {'
  echo "cat << 'EOB'"
  for f in "$projectdir/ass"/*; do
    echo "${f##*/}"
  done | sort
  echo 'EOB'
  echo '}'
} > "$projectdir/lib/asslist.sh"

source "$projectdir/lib/asslist.sh"

# update dep list
{
  echo '#!/usr/bin/env bash'
  echo
  echo 'deplist() {'
  echo "cat << 'EOB'"
  comm -23 "$projectdir/lib/alldeps" <(asslist)
  echo 'EOB'
  echo '}'
} > "$projectdir/lib/deplist.sh"

rm "$projectdir/lib/alldeps"

# add description table to readme/usage
tablefile="$projectdir/manifest.d/usage.md"
# remove old table
awk -i inplace '/^[|][[]/ {exit};{print}' \
  "$tablefile"

# add new table
for a in "$projectdir/ass"/*; do
  printf '|[%s] | %s\n' \
    "${a##*/}" \
    "$(bashbud --get description "$a")"
done >> "$tablefile"
